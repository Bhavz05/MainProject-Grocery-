<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-11T15:38:41 IST" name="mutibroser" finished-at="2025-10-11T15:40:40 IST" duration-ms="118490">
    <groups>
      <group name="smoke">
        <method signature="LoginTest.verifyWetherUserIsAbleToLoginWithValidCredentials()[pri:1, instance:testScript.LoginTest@5bf0d49]" name="verifyWetherUserIsAbleToLoginWithValidCredentials" class="testScript.LoginTest"/>
        <method signature="LoginTest.verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword()[pri:4, instance:testScript.LoginTest@5bf0d49]" name="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword" class="testScript.LoginTest"/>
        <method signature="LoginTest.verifyWetherUserIsAbleToLoginWithValidCredentials()[pri:1, instance:testScript.LoginTest@2de23121]" name="verifyWetherUserIsAbleToLoginWithValidCredentials" class="testScript.LoginTest"/>
        <method signature="LoginTest.verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword()[pri:4, instance:testScript.LoginTest@2de23121]" name="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword" class="testScript.LoginTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-10-11T15:38:41 IST" name="Test1" finished-at="2025-10-11T15:39:05 IST" duration-ms="23303">
      <class name="testScript.LoginTest">
        <test-method is-config="true" signature="initialiZEBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:41 IST" name="initialiZEBrowser" finished-at="2025-10-11T15:38:46 IST" duration-ms="4863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiZEBrowser -->
        <test-method signature="verifyWetherUserIsAbleToLoginWithValidCredentials()[pri:1, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:46 IST" name="verifyWetherUserIsAbleToLoginWithValidCredentials" description="User is try to login with valid credentials" finished-at="2025-10-11T15:38:50 IST" duration-ms="3473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWetherUserIsAbleToLoginWithValidCredentials -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:50 IST" name="driverQuit" finished-at="2025-10-11T15:38:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWetherUserIsAbleToLoginWithValidCredentials status=SUCCESS method=LoginTest.verifyWetherUserIsAbleToLoginWithValidCredentials()[pri:1, instance:testScript.LoginTest@5bf0d49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="initialiZEBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:50 IST" name="initialiZEBrowser" finished-at="2025-10-11T15:38:52 IST" duration-ms="2351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiZEBrowser -->
        <test-method signature="verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword()[pri:2, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:52 IST" name="verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword" finished-at="2025-10-11T15:38:53 IST" duration-ms="1022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:53 IST" name="driverQuit" finished-at="2025-10-11T15:38:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword status=SUCCESS method=LoginTest.verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword()[pri:2, instance:testScript.LoginTest@5bf0d49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="initialiZEBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:53 IST" name="initialiZEBrowser" finished-at="2025-10-11T15:38:57 IST" duration-ms="3947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiZEBrowser -->
        <test-method signature="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword()[pri:3, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:57 IST" name="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword" finished-at="2025-10-11T15:38:58 IST" duration-ms="1447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:58 IST" name="driverQuit" finished-at="2025-10-11T15:38:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword status=SUCCESS method=LoginTest.verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword()[pri:3, instance:testScript.LoginTest@5bf0d49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="initialiZEBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:38:58 IST" name="initialiZEBrowser" finished-at="2025-10-11T15:39:03 IST" duration-ms="4607" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiZEBrowser -->
        <test-method signature="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword()[pri:4, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:39:03 IST" name="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword" finished-at="2025-10-11T15:39:04 IST" duration-ms="1417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@5bf0d49]" started-at="2025-10-11T15:39:05 IST" name="driverQuit" finished-at="2025-10-11T15:39:05 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword status=SUCCESS method=LoginTest.verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword()[pri:4, instance:testScript.LoginTest@5bf0d49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testScript.LoginTest -->
    </test> <!-- Test1 -->
    <test started-at="2025-10-11T15:39:05 IST" name="Test2" finished-at="2025-10-11T15:40:40 IST" duration-ms="95087">
      <class name="testScript.LoginTest">
        <test-method is-config="true" signature="initialiZEBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:39:05 IST" name="initialiZEBrowser" finished-at="2025-10-11T15:39:29 IST" duration-ms="24693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FireFox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiZEBrowser -->
        <test-method signature="verifyWetherUserIsAbleToLoginWithValidCredentials()[pri:1, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:39:29 IST" name="verifyWetherUserIsAbleToLoginWithValidCredentials" description="User is try to login with valid credentials" finished-at="2025-10-11T15:39:34 IST" duration-ms="4694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWetherUserIsAbleToLoginWithValidCredentials -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:39:34 IST" name="driverQuit" finished-at="2025-10-11T15:39:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWetherUserIsAbleToLoginWithValidCredentials status=SUCCESS method=LoginTest.verifyWetherUserIsAbleToLoginWithValidCredentials()[pri:1, instance:testScript.LoginTest@2de23121] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="initialiZEBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:39:34 IST" name="initialiZEBrowser" finished-at="2025-10-11T15:39:53 IST" duration-ms="19473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FireFox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiZEBrowser -->
        <test-method signature="verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword()[pri:2, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:39:53 IST" name="verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword" finished-at="2025-10-11T15:39:56 IST" duration-ms="2070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:39:56 IST" name="driverQuit" finished-at="2025-10-11T15:39:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword status=SUCCESS method=LoginTest.verifyWetherUserIsAbleToLoginWithValidUsernameAndInvalidPassword()[pri:2, instance:testScript.LoginTest@2de23121] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="initialiZEBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:39:56 IST" name="initialiZEBrowser" finished-at="2025-10-11T15:40:11 IST" duration-ms="15638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FireFox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiZEBrowser -->
        <test-method signature="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword()[pri:3, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:40:11 IST" name="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword" finished-at="2025-10-11T15:40:13 IST" duration-ms="2171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:40:13 IST" name="driverQuit" finished-at="2025-10-11T15:40:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword status=SUCCESS method=LoginTest.verifyWetherUserIsAbleToLoginWithInvalidUsernameAndValidPassword()[pri:3, instance:testScript.LoginTest@2de23121] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="initialiZEBrowser(java.lang.String)[pri:0, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:40:13 IST" name="initialiZEBrowser" finished-at="2025-10-11T15:40:39 IST" duration-ms="26090" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[FireFox]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[Browsing context has been discarded
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [88df1df4-185f-4d9e-9288-c1fadd0a0609, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.4, moz:accessibilityChecks: false, moz:buildID: 20251003115653, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 11636, moz:profile: C:\Users\user\AppData\Local..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 88df1df4-185f-4d9e-9288-c1fadd0a0609]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: Browsing context has been discarded
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [88df1df4-185f-4d9e-9288-c1fadd0a0609, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.4, moz:accessibilityChecks: false, moz:buildID: 20251003115653, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 11636, moz:profile: C:\Users\user\AppData\Local..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 88df1df4-185f-4d9e-9288-c1fadd0a0609
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:544)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:617)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:621)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:1047)
at automationCore.Base.initialiZEBrowser(Base.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiZEBrowser -->
        <test-method signature="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword()[pri:4, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:40:40 IST" name="verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword" finished-at="2025-10-11T15:40:40 IST" duration-ms="1" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[Browsing context has been discarded
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [88df1df4-185f-4d9e-9288-c1fadd0a0609, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.4, moz:accessibilityChecks: false, moz:buildID: 20251003115653, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 11636, moz:profile: C:\Users\user\AppData\Local..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 88df1df4-185f-4d9e-9288-c1fadd0a0609]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: Browsing context has been discarded
Build info: version: '4.34.0', revision: '707dcb4246*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [88df1df4-185f-4d9e-9288-c1fadd0a0609, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 143.0.4, moz:accessibilityChecks: false, moz:buildID: 20251003115653, moz:geckodriverVersion: 0.36.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 11636, moz:profile: C:\Users\user\AppData\Local..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 88df1df4-185f-4d9e-9288-c1fadd0a0609
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:544)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:617)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:621)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:1047)
at automationCore.Base.initialiZEBrowser(Base.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testScript.LoginTest@2de23121]" started-at="2025-10-11T15:40:40 IST" name="driverQuit" finished-at="2025-10-11T15:40:40 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword status=SKIP method=LoginTest.verifyWetherUserIsAbleToLoginWithInvalidUsernameAndInvalidPassword()[pri:4, instance:testScript.LoginTest@2de23121] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testScript.LoginTest -->
    </test> <!-- Test2 -->
  </suite> <!-- mutibroser -->
</testng-results>
